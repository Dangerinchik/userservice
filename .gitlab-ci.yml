stages:
  - build
  - test
  - analyse
  - build-image

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

cache:
  paths:
    - .m2/repository/
    - target/

services:
  - name: docker:20.10.16-dind
    command: ["--tls=false"]

build-job:
  stage: build
  image: maven:3.9.9-eclipse-temurin-17
  before_script:
    - chmod +x ./mvnw
  script:
    - ./mvnw clean compile -DskipTests
  artifacts:
    paths:
      - target/classes/
    expire_in: 1 hour

test-job:
  stage: test
  image: maven:3.9.9-eclipse-temurin-17
  before_script:
    - chmod +x ./mvnw
  script:
    - ./mvnw test
  artifacts:
    paths:
      - target/surefire-reports/
      - target/site/jacoco/
    reports:
      junit: target/surefire-reports/*.xml

analyse-job:
  stage: analyse
  image: maven:3.9.9-eclipse-temurin-17
  before_script:
    - chmod +x ./mvnw
  script:
    - ./mvnw sonar:sonar
      -Dsonar.projectKey=userservice
      -Dsonar.projectName=userservice
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONARQUBE_TOKEN}
      -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

build-image-job:
  stage: build-image
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      command: ["--tls=false"]
  before_script:
    - apk add --no-cache docker-compose
  script:
    - echo "Building Docker image..."
    - docker build -t userservice-server:latest .
    - echo "Docker image built successfully"
  dependencies: []
  only:
    - main
    - tags